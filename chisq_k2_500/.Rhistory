df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal',acf=bj_acf),
data.frame(lag=1:100,model='Ggbr Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_axis(breaks=12*(1:8))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = theme_rect(fill = "transparent",colour = NA),
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank()
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()
)
ggsave('~/UniWork/ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=12)
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=12),
axis.text=element_text(size=10)
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
library(tidyverse)
library(hypergeo)
library(hypergeo)
library(tidyverse)
library(hypergeo)
alpha <- 0.6
delta <- 0.6
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- hypergeo(delta,j+delta,j+1,alpha2)
rho[j+1] <- psi_j * f
}
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- Re(hypergeo(delta,j+delta,j+1,alpha2))
rho[j+1] <- psi_j * f
}
rho <- rho / rho[1]
rho <- rho[2:100]
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf),
data.frame(lag=1:100,model='GAR(1)',acf=rho))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
alpha <- 0.6
delta <- 0.6
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- Re(hypergeo(delta,j+delta,j+1,alpha2))
rho[j+1] <- psi_j * f
}
rho <- rho / rho[1]
rho <- rho[2:101]
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf),
data.frame(lag=1:100,model='GAR(1)',acf=rho))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
omega <- seq(0,pi,by=0.001)
alpha<-0.4
delta<-0.8
p<-12
omega <- seq(0,pi,by=0.001)
f<-(q+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2*pi)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
delta<-1
p<-12
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
p<-288
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
delta<-0.3
p<-288
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
p<-12
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
library(hypergeo)
(1+1.4^2)/2.8
(1+1.5^2)/3
1.5^2
alpha <- seq(0.1,5.0,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,aa,type='l')
alpha <- seq(-5.0,-0.1,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,aa,type='l')
plot(alpha,acos(aa),type='l')
plot(alpha,acos(complex(aa)),type='l')
plot(alpha,acos(complex(real=aa)),type='l')
acos(complex(real=aa))
plot(alpha,Mod(acos(complex(real=aa))),type='l')
alpha <- seq(0.1,5.0,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,Mod(acos(complex(real=aa))),type='l')
1/28
1/31
1/14
library(tidyverse)
library(lubridate)
library(forecast)
library(garma)
data(taylor)
gg_raw_pgram(taylor,k=3)
1/336
1/48
1/24
1/7
cos(2*pi*.4)
x<-(0:100)*2*pi/100
y<-sin(x)
y2<-16*x1/(5*pi^2-4*x1)
plot(x,y,type='l')
lines(x,y2,color='red')
x1 <- (pi-x)*x
y2<-16*x1/(5*pi^2-4*x1)
plot(x,y,type='l')
lines(x,y2,color='red')
lines(x,y2,cex='red')
lines(x,y2,col='red')
x<-(0:100)*pi/100
y<-sin(x)
x1 <- (pi-x)*x
y2<-16*x1/(5*pi^2-4*x1)
plot(x,y,type='l')
lines(x,y2,col='red')
library(tidyverse)
library(forecast)
library(nloptr)
library(garma)
library(stR)
data(electricity)
demand<-electricity[,1]
plot(demand)
f_ggbr_inv<-function(omega,u,d) {
return ( (4*(cos(omega)-u)^2)^d)
}
f_sarfima_inv<-function(omega,s,d) {
return( (2*(1-cos(s*omega)))^d)
}
obj_ggbr <- function(par,ss) {
omega <- ss$freq*2*pi
spec_den_inv <-  f_ggbr_inv(omega,par[1],par[2]) * (1-2*par[3]*cos(omega)+par[3]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(omega))
return(sum(ratio,na.rm=TRUE))
}
obj_sarfima <- function(par,ss) {
spec_den_inv <-  f_sarfima_inv(ss$freq*2*pi,par[1],par[2]) * (1-2*par[3]*cos(ss$freq*2*pi)+par[3]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
return(sum(ratio,na.rm=TRUE) - sum(log(spec_den_inv[spec_den_inv>0]),na.rm=TRUE))
}
garma(demand,order=c(1,0,0),fitted=FALSE)
y<-as.numeric(demand-mean(demand))
ss<-stats::spectrum(y,plot=FALSE,detrend=TRUE,demean=TRUE,method='pgram',taper=0,fast=FALSE)
fit <- directL(fn=obj_ggbr, lower=c(-1.0,0.0,-1.0), upper=c(1.0,0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
cat(sprintf('%9.4f',2*pi/acos(fit$par[1])),'\n')
obj_sarfima <- function(par,ss,s=48) {
spec_den_inv <-  f_sarfima_inv(ss$freq*2*pi,s,par[1]) * (1-2*par[2]*cos(ss$freq*2*pi)+par[2]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
return(sum(ratio,na.rm=TRUE))# - sum(log(spec_den_inv[spec_den_inv>0]),na.rm=TRUE))
}
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(-1.0,0.0,-1.0), upper=c(1.0,0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
cat(sprintf('%9.4f',2*pi/acos(fit$par[1])),'\n')
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-25,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_ggbr, lower=c(-1.0,0.0,-1.0), upper=c(1.0,0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-25,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
cat(sprintf('%9.4f',2*pi/acos(fit$par[1])),'\n')
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=48*7, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
par
fit$par
fit$par[1]
fit$par[-1]
y<-as.numeric(demand-mean(demand))
ss<-stats::spectrum(y,plot=FALSE,detrend=TRUE,demean=TRUE,method='pgram',taper=0,fast=FALSE)
fit <- directL(fn=obj_ggbr, lower=c(-1.0,0.0,-1.0), upper=c(1.0,0.5,1.0), ss=ss, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
cat(sprintf('%9.4f',2*pi/acos(fit$par[1])),'\n')
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
obj_sarfima <- function(par,ss,s=48) {
spec_den_inv <- (1-2*par[-1]*cos(ss$freq*2*pi)+par[-1]^2)
for (i in 1:length(s))
spec_den_inv <-  spec_den_inv * f_sarfima_inv(ss$freq*2*pi,s[i],par[i])
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
cat(sprintf("%.4f %.4f %.4f %f\n",par[1],par[2],par[3],sum(ratio,na.rm=TRUE)))
return(sum(ratio,na.rm=TRUE))
}
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
f_sarfima_inv<-function(omega,s,d) {
cat(sprintf("s %d d %f\n",s,d))
return( (2*(1-cos(s*omega)))^d)
}
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.0,-1.0), upper=c(0.5,1.0), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
f_sarfima_inv<-function(omega,s,d) {
cat(sprintf("s %d d %f res %f\n",s,d,(2*(1-cos(s*omega)))^d))
return( (2*(1-cos(s*omega)))^d)
}
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
f_sarfima_inv<-function(omega,s,d) {
if ((2*(1-cos(s*omega)))^d>1e6)
cat(sprintf("LARGE s %d d %f res %f\n",s,d,(2*(1-cos(s*omega)))^d))
return( (2*(1-cos(s*omega)))^d)
}
obj_sarfima <- function(par,ss,s=48) {
spec_den_inv <- (1-2*par[-1]*cos(ss$freq*2*pi)+par[-1]^2)
for (i in 1:length(s))
spec_den_inv <-  spec_den_inv * f_sarfima_inv(ss$freq*2*pi,s[i],par[i])
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
cat(sprintf("%.4f %.4f %.4f %f\n",par[1],par[2],par[3],sum(ratio,na.rm=TRUE)))
return(sum(ratio,na.rm=TRUE))
}
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
warnings()
f_sarfima_inv<-function(omega,s,d) {
if (any((2*(1-cos(s*omega)))^d>1e6))
cat(sprintf("LARGE s %d d %f res %f\n",s,d,(2*(1-cos(s*omega)))^d))
return( (2*(1-cos(s*omega)))^d)
}
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
f_sarfima_inv<-function(omega,s,d) {
if (any(abs((2*(1-cos(s*omega)))^d)>1e6))
cat(sprintf("LARGE s %d d %f res %f\n",s,d,(2*(1-cos(s*omega)))^d))
return( (2*(1-cos(s*omega)))^d)
}
fit <- directL(fn=obj_sarfima, lower=c(0.0,0.0,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
fit <- directL(fn=obj_sarfima, lower=c(-0.5,-0.5,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_sarfima, lower=c(0.01,0.01,-1.0), upper=c(0.5,0.5,1.0), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
f_sarfima_inv<-function(omega,s,d) {
#if (any(abs((2*(1-cos(s*omega)))^d)>1e6))
#  cat(sprintf("LARGE s %d d %f res %f\n",s,d,(2*(1-cos(s*omega)))^d))
return( (2*(1-cos(s*omega)))^d)
}
obj_ggbr <- function(par,ss) {
omega <- ss$freq*2*pi
spec_den_inv <-  f_ggbr_inv(omega,par[1],par[2]) * (1-2*par[3]*cos(omega)+par[3]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(omega))
return(sum(ratio,na.rm=TRUE))
}
obj_sarfima <- function(par,ss,s=48) {
spec_den_inv <- (1-2*par[-1]*cos(ss$freq*2*pi)+par[-1]^2)
for (i in 1:length(s))
spec_den_inv <-  spec_den_inv * f_sarfima_inv(ss$freq*2*pi,s[i],par[i])
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
#cat(sprintf("%.4f %.4f %.4f %f\n",par[1],par[2],par[3],sum(ratio,na.rm=TRUE)))
return(sum(ratio,na.rm=TRUE))
}
# SARFIMA
fit <- directL(fn=obj_sarfima, lower=c(0.01,-1.0), upper=c(0.5,1.0), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
5520/48
seq(1,length(s),by=2)
seq(1,8,by=2)
obj_sarima <- function(par,ss,s=48) {
spec_den_inv <- (1-2*par[-1]*cos(ss$freq*2*pi)+par[-1]^2)
for (i in seq(1,length(s),by=2))
spec_den_inv <-  spec_den_inv * (1-2*par[2*i-1]*cos(ss$freq*2*pi*s[i])+par[2*i-1]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
#cat(sprintf("%.4f %.4f %.4f %f\n",par[1],par[2],par[3],sum(ratio,na.rm=TRUE)))
return(sum(ratio,na.rm=TRUE))
}
obj_sarima <- function(par,ss,s=48) {
spec_den_inv <- (1-2*par[-1]*cos(ss$freq*2*pi)+par[-1]^2)
for (i in 1:length(s))
spec_den_inv <-  spec_den_inv * (1-2*par[i]*cos(ss$freq*2*pi*s[i])+par[i]^2)
ratio <- ss$spec * spec_den_inv / (2*pi*length(ss$freq))
#cat(sprintf("%.4f %.4f %.4f %f\n",par[1],par[2],par[3],sum(ratio,na.rm=TRUE)))
return(sum(ratio,na.rm=TRUE))
}
#SARIMA
fit <- directL(fn=obj_sarima, lower=rep(-2,3), upper=rep(2,3), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
#SARIMA
fit <- directL(fn=obj_sarima, lower=rep(-2,2), upper=rep(2,2), ss=ss, s=48, control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- directL(fn=obj_sarima, lower=rep(-2,3), upper=rep(2,3), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
fit <- cobyla(fn=obj_sarima, lower=rep(-2,3), upper=rep(2,3), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
fit <- cobyla(c(0,0,0),fn=obj_sarima, lower=rep(-2,3), upper=rep(2,3), ss=ss, s=c(48,48*7), control=list(maxeval=10000,ftol_rel=1e-15,xtol_rel=0))
cat(sprintf('%9.4f',fit$par),'\n')
library(tidyverse)
setwd("/home/richard/UniWork/Ggbr Research/Simulations Paper/sims/Set2/chisq_k2_500")
bml <- readRDS("res_chisq_500_k2_bml.RDS")
View(bml)
bml <- readRDS("res_chisq_500_k2_bml.RDS")
View(bml)
bml <- readRDS("res_chisq_500_k2_bml.RDS")
View(bml)
