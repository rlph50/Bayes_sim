bj_acf <- rnorm(100)/10
plot(1:100,bj_acf)
plot(1:100,bj_acf,type='l')
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
bj_acf[1]=0.8
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
bj_acf[12] <- 0.4
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
bj_acf[12] <- 0.6
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
bj_acf <- rnorm(100)/20
bj_acf[1] <- 0.8
bj_acf[12] <- 0.6
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
bj_acf <- ggbr_acf <- rnorm(100)/20
bj_acf[1] <- 0.8
bj_acf[12] <- 0.6
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
for (i in c(12,24,36,48,60,72,84,96)) ggbr_acf[i] <- 0.6/(i/2)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
bj_acf <- ggbr_acf <- rnorm(100)/20
bj_acf[1] <- 0.8
bj_acf[12] <- 0.6
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.6/(i/2)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.4/(i*.7)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.6/(i*.5)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
bj_acf[1] <- ggbr[1] <- 0.8
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
bj_acf[1] <- ggbr_acf[1] <- 0.8
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
bj_acf <- ggbr_acf <- rnorm(100)/30
bj_acf[1] <- ggbr_acf[1] <- 0.8
bj_acf[12] <- 0.6
plot(1:100,bj_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.8/(i*.5)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.8/(i^0.25)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
for (i in 1:8) ggbr_acf[i*12] <- 0.4/(i^0.25)
plot(1:100,ggbr_acf,type='l',ylim=c(-1,1))
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal',acf=bj_acf),
data.frame(lag=1:100,model='Ggbr Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf,color=model)) +
geom_line()+
theme_bw()
library(tidyverse)
ggplot(df,aes(x=lag,y=acf,color=model)) +
geom_line()+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=var(model)) +
ylim(-1,1)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=var('model')) +
ylim(-1,1)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars('model')) +
ylim(-1,1)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)
for (i in 1:8) ggbr_acf[i*12] <- 0.6/(i^0.25)
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal',acf=bj_acf),
data.frame(lag=1:100,model='Ggbr Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_axis(breaks=12*(1:8))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.5) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw()
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = theme_rect(fill = "transparent",colour = NA),
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank()
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()
)
ggsave('~/UniWork/ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=12)
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=12),
axis.text=element_text(size=10)
)
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
ggsave('~/UniWork/Ggbr Research/ANZSC 2021 talk/acf1.png',bg='transparent')
library(tidyverse)
library(hypergeo)
library(hypergeo)
library(tidyverse)
library(hypergeo)
alpha <- 0.6
delta <- 0.6
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- hypergeo(delta,j+delta,j+1,alpha2)
rho[j+1] <- psi_j * f
}
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- Re(hypergeo(delta,j+delta,j+1,alpha2))
rho[j+1] <- psi_j * f
}
rho <- rho / rho[1]
rho <- rho[2:100]
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf),
data.frame(lag=1:100,model='GAR(1)',acf=rho))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
alpha <- 0.6
delta <- 0.6
rho <- numeric(101)
alpha2 <- alpha^2
psi_j <- 1
for (j in 0:100) {
if (j>0) psi_j <- psi_j * alpha *(j+delta)/(j+1.0)
f <- Re(hypergeo(delta,j+delta,j+1,alpha2))
rho[j+1] <- psi_j * f
}
rho <- rho / rho[1]
rho <- rho[2:101]
df <- rbind(data.frame(lag=1:100,model='Box-Jenkins Seasonal (P=1)',acf=bj_acf),
data.frame(lag=1:100,model='Gegenbauer Seasonal',acf=ggbr_acf),
data.frame(lag=1:100,model='GAR(1)',acf=rho))
ggplot(df,aes(x=lag,y=acf)) +
geom_line()+
geom_vline(xintercept=12*1:8,color='red',linetype='dashed',size=0.3) +
scale_x_continuous(breaks=12*(1:8)) +
facet_grid(rows=vars(model)) +
ylim(-1,1)+
ggtitle('Comparing idealised Seasonal Models via their ACF') +
xlab('Lag') + ylab('ACF') +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
strip.text=element_text(size=14),
axis.text=element_text(size=12)
)
omega <- seq(0,pi,by=0.001)
alpha<-0.4
delta<-0.8
p<-12
omega <- seq(0,pi,by=0.001)
f<-(q+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2*pi)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
delta<-1
p<-12
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
p<-288
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
delta<-0.3
p<-288
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
p<-12
omega <- seq(0,pi,by=0.001)
f<-(1+alpha^2+2*alpha*cos(p*omega))^(-delta)/(2)
plot(omega,f,type='l')
library(hypergeo)
(1+1.4^2)/2.8
(1+1.5^2)/3
1.5^2
alpha <- seq(0.1,5.0,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,aa,type='l')
alpha <- seq(-5.0,-0.1,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,aa,type='l')
plot(alpha,acos(aa),type='l')
plot(alpha,acos(complex(aa)),type='l')
plot(alpha,acos(complex(real=aa)),type='l')
acos(complex(real=aa))
plot(alpha,Mod(acos(complex(real=aa))),type='l')
alpha <- seq(0.1,5.0,by=0.01)
aa <- (1+alpha^2)/(2*alpha)
plot(alpha,Mod(acos(complex(real=aa))),type='l')
1/28
1/31
1/14
library(tidyverse)
library(lubridate)
library(forecast)
library(garma)
data(taylor)
gg_raw_pgram(taylor,k=3)
1/336
1/48
1/24
1/7
setwd("/home/richard/UniWork/Ggbr Research/Simulations Paper/sims/20210409/Set2/chisq_k1_500")
res <- readRDS('res_chisq_500_k2_whittle.RDS')
summary(res)
res <- readRDS('res_chisq_500_k1_whittle.RDS')
summary(res)
setwd("/home/richard/UniWork/Ggbr Research/Simulations Paper/sims/20210409/Set2/chisq_k1_500")
res <- readRDS('res_chisq_500_k1_whittle.RDS')
summary(res)
setwd("/home/richard/UniWork/Ggbr Research/Simulations Paper/sims/20210409/Set2/chisq_k2_500")
res <- readRDS('res_chisq_500_k2_whittle.RDS')
summary(res)
setwd("/home/richard/UniWork/Ggbr Research/Simulations Paper/sims/20210409/Set2/chisq_k2_500")
res <- readRDS('res_chisq_500_k2_bw.RDS')
View(res)
res <- readRDS('res_chisq_500_k2_bw.RDS')[1:590,]
summary(res)
View(res)
